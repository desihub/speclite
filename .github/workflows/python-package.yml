# # Workflow is based on the Astropy GitHub actions workflow, ci_workflows.yml

name: CI

on:
  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

jobs:
  tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] # Add more os?
        python-version: [3.8, 3.9]
        astropy-version: ['<5.0', '<5.1']
        numpy-version: ['<1.20', '<1.21', '<1.22']
        scipy-version: ['<1.6', '<1.7']
        matplotlib-version: ['<3.3', '<3.4']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install pytest pytest-astropy pyyaml
          # python -m pip install -r requirements.txt
          python -m pip install 'scipy${{ matrix.scipy-version }}'
          python -m pip install 'matplotlib${{ matrix.matplotlib-version }}'
          python -m pip install 'astropy${{ matrix.astropy-version }}'
          python -m pip install 'numpy${{ matrix.numpy-version }}'
      - name: Run the test
        run: pytest

  coverage:
    name: Test coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install pytest pytest-astropy coveralls
          python -m pip install pyyaml numpy\<1.21 scipy\<1.6 matplotlib\<3.3 astropy\<5.0

      - name: Run the test with coverage
        run: pytest --cov

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: coveralls

  docs:
    name: Doc test
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
            os: [ubuntu-latest]
            python-version: [3.9]

    steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install Python dependencies
          run: |
            python -m pip install --upgrade pip wheel setuptools docutils\<0.18 Sphinx
            python -m pip install sphinx-astropy
            python -m pip install speclite

        - name: Test the documentation
          run: sphinx-build -W --keep-going -b html docs docs/_build/html

  style:
    name: Style test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          os: [ubuntu-latest]
          python-version: [3.9]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools flake8

      - name: Test the style; failures are allowed
        # This is equivalent to an allowed falure.
        continue-on-error: true
        run: flake8 speclite --count --max-line-length=100
